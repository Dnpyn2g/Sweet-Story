#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞ –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö
–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ 100 JSON —Ñ–∞–π–ª–∞–º–∏
"""

import os
import re

def generate_fetch_code(indent="        "):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ 100 JSON —Ñ–∞–π–ª–æ–≤"""
    lines = []
    for i in range(1, 101):
        if i == 100:
            lines.append(f"{indent}fetch('data/stories-{i}.json').then(res => res.json())")
        else:
            lines.append(f"{indent}fetch('data/stories-{i}.json').then(res => res.json()),")
    return '\n'.join(lines)

def generate_python_files_list():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è Python"""
    lines = []
    for i in range(1, 101):
        lines.append(f"    os.path.join(BASE_DIR, 'data', 'stories-{i}.json'),")
    return '\n'.join(lines)

def update_html_file(file_path, description):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç HTML —Ñ–∞–π–ª"""
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return False
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ò—â–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º Promise.all –±–ª–æ–∫
        pattern = r'Promise\.all\(\[\s*fetch\(\'data/stories-\d+\.json\'\)\.then\([^)]+\),?\s*(?:\s*fetch\(\'data/stories-\d+\.json\'\)\.then\([^)]+\),?\s*)*\s*\]\)'
        
        new_fetch_code = f"Promise.all([\n{generate_fetch_code()}\n      ])"
        
        # –ó–∞–º–µ–Ω—è–µ–º
        new_content = re.sub(pattern, new_fetch_code, content)
        
        if new_content != content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(new_content)
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω {description}: {file_path}")
            return True
        else:
            print(f"‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω –±–ª–æ–∫ –¥–ª—è –∑–∞–º–µ–Ω—ã –≤ {file_path}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ {file_path}: {e}")
        return False

def update_sidebar_js():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç sidebar.js"""
    file_path = "sidebar.js"
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return False
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ò—â–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º Promise.all –±–ª–æ–∫ –≤ sidebar.js
        pattern = r'Promise\.all\(\[\s*fetch\(\'data/stories-\d+\.json\'\)\.then\([^)]+\),?\s*(?:\s*fetch\(\'data/stories-\d+\.json\'\)\.then\([^)]+\),?\s*)*\s*\]\)'
        
        new_fetch_code = f"Promise.all([\n{generate_fetch_code('    ')}\n  ])"
        
        # –ó–∞–º–µ–Ω—è–µ–º
        new_content = re.sub(pattern, new_fetch_code, content)
        
        if new_content != content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(new_content)
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω sidebar.js")
            return True
        else:
            print(f"‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω –±–ª–æ–∫ –¥–ª—è –∑–∞–º–µ–Ω—ã –≤ sidebar.js")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ sidebar.js: {e}")
        return False

def update_sk_py():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç sk.py"""
    file_path = "sk.py"
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return False
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ò—â–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º JSON_FILES –±–ª–æ–∫
        pattern = r'JSON_FILES\s*=\s*\[\s*(?:os\.path\.join\([^)]+\),?\s*)*\s*\]'
        
        new_files_code = f"JSON_FILES = [\n{generate_python_files_list()}\n]"
        
        # –ó–∞–º–µ–Ω—è–µ–º
        new_content = re.sub(pattern, new_files_code, content)
        
        if new_content != content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(new_content)
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω sk.py")
            return True
        else:
            print(f"‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω –±–ª–æ–∫ JSON_FILES –¥–ª—è –∑–∞–º–µ–Ω—ã –≤ sk.py")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ sk.py: {e}")
        return False

def main():
    print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ 100 JSON —Ñ–∞–π–ª–∞–º–∏")
    print("=" * 70)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º HTML —Ñ–∞–π–ª—ã
    html_files = [
        ("index.html", "–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
        ("story1.html", "—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏"),
        ("blogosphere.html", "—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±–ª–æ–≥–∞")
    ]
    
    for file_path, description in html_files:
        update_html_file(file_path, description)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º JavaScript —Ñ–∞–π–ª
    update_sidebar_js()
    
    # –û–±–Ω–æ–≤–ª—è–µ–º Python —Ñ–∞–π–ª
    update_sk_py()
    
    print("\n" + "=" * 70)
    print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\n–¢–µ–ø–µ—Ä—å —Å–∞–π—Ç –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –≤—Å–µ 100 JSON —Ñ–∞–π–ª–æ–≤.")
    print("üìä –§–∞–π–ª—ã 1-12 —Å–æ–¥–µ—Ä–∂–∞—Ç –∏—Å—Ç–æ—Ä–∏–∏ (max 200 –≤ —Ñ–∞–π–ª–µ)")
    print("üìÑ –§–∞–π–ª—ã 13-100 –ø—É—Å—Ç—ã–µ (–≥–æ—Ç–æ–≤—ã –¥–ª—è –Ω–æ–≤—ã—Ö –∏—Å—Ç–æ—Ä–∏–π)")

if __name__ == "__main__":
    main()
